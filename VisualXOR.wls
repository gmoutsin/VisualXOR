#!/usr/bin/env wolframscript
(* ::Package:: *)

(****** The present is distributed under GPL v3.0 ******)


(* ::Input:: *)
(*SeedRandom[123]*)
(*(key=RandomInteger[{0,1},{50,50}]);*)
(**)
(*grey=RGBColor[0,0,0,0.5];*)
(*distinctRed=RGBColor[230/255,25/255,75/255,0.5];*)
(*distinctGreen=RGBColor[70/255,240/255,240/255,0.5];*)
(*distinctTeal=RGBColor[0/255,128/255,128/255,0.5];*)
(*frame=Graphics[Line[{{0,0},{0,1},{1,1},{1,0},{0,0}}]];*)
(**)
(*DoubleUp[cl_]:=Flatten[cl/.{0->{{0,1},{1,0}},1->{{1,0},{0,1}}},{{1,3},{2,4}}]*)
(**)
(*VectorBitmap[mat_]:=Module[{v,h,vstep,hstep,reclist={}},*)
(*{v,h}=Dimensions[mat];*)
(*vstep=1/v;*)
(*hstep=1/h;*)
(**)
(*Do[*)
(*Do[If[mat[[vcount,hcount]]==1,AppendTo[reclist,Graphics[Rectangle[{(hcount-1) hstep,1-(vcount) vstep},{hcount hstep,1-(vcount-1) vstep}]]]];*)
(*,{vcount,1,v}]*)
(*,{hcount,1,h}];*)
(**)
(*Show[reclist,PlotRange->{{0,1},{0,1}}]*)
(*]*)
(**)
(*MyBinaryMatrixPlot[m_,color_]:=Module[{NN=Length[m],step,restab={}},*)
(*step=1/NN;*)
(*Do[*)
(*Do[*)
(*If[m[[j,i]]==1,AppendTo[restab,Graphics[{color,Rectangle[{(i-1)step,1-j step},{i step,1-(j-1) step}]}]]]*)
(*,{i,1,NN}]*)
(*,{j,1,NN}];*)
(*restab*)
(*]*)
(**)
(*ShapesToMatrix[s_]:=Transpose[Mod[Floor[Transpose[ImageData[Floor[Rasterize[ColorConvert[Show[s],"Grayscale"],ImageResolution->10]]],1<->3][[1]]]+1,2]]*)
(**)
(*MyEncrypt[m_]:=Mod[m+key,2]*)
(**)
(*MyEncrypt[m_,k_]:=Mod[m+k,2]*)
(**)
(*MyEncryptUp[m_]:=DoubleUp[Mod[m+key,2]]*)
(**)
(*VectorBitmapUp[mat_]:=VectorBitmap[DoubleUp[mat]]*)
(**)
(*OverlapMatrices[mat1_,mat2_]:=Sign[mat1+mat2]*)
(**)
(*ExportPDF[g_,name_]:=Export[Evaluate[FileNameJoin[{NotebookDirectory[],"latex","pics",name<>".pdf"}]],g]*)
(**)
(*ExportPDF[VectorBitmapUp[key],"key"];*)


(* ::Input:: *)
(*RR=Show[*)
(*Graphics[Rectangle[{0,0},{1,1}]],*)
(*Graphics[Rectangle[{1,1},{2,2}]]];*)
(**)
(*LL=Show[*)
(*Graphics[Rectangle[{0,1},{1,2}]],*)
(*Graphics[Rectangle[{1,0},{2,1}]]];*)
(*BB=Show[*)
(*Graphics[Rectangle[{0,0},{1,1}]]];*)
(**)
(*whitePixel=Graphics[Line[{{0,0},{0,1},{1,1},{1,0},{0,0}}]];*)
(*blackPixel=Graphics[Rectangle[]];*)
(*lightGreyPixel=Show[Graphics[{RGBColor[0,0,0,0.25],Rectangle[]}]];*)
(*darkGreyPixel=Show[Graphics[{RGBColor[0,0,0,0.6],Rectangle[]}]];*)
(**)
(*ExportPDF[whitePixel,"PixelWhite"];*)
(*ExportPDF[blackPixel,"PixelBlack"];*)
(*ExportPDF[lightGreyPixel,"PixelLightGrey"];*)
(*ExportPDF[darkGreyPixel,"PixelDarkGrey"];*)
(**)
(*ExportPDF[RR,"R"];*)
(*ExportPDF[LL,"L"];*)
(*ExportPDF[BB,"B"];*)


(* ::Input:: *)
(*SeedRandom[2]*)
(*smlres=4;*)
(*smlkey=RandomInteger[{0,1},{smlres,smlres}];*)
(*upper=Table[If[i<=smlres/2,1,0],{i,smlres},{j,smlres}];*)
(*left=Table[If[j<=smlres/2,1,0],{i,smlres},{j,smlres}];*)
(**)
(*m1=smlkey;*)
(*m2=left;*)
(*m3=Mod[smlkey+left,2];*)
(**)
(*pm1=Show[frame,MyBinaryMatrixPlot[m1,grey]];*)
(*pm2=Show[frame,MyBinaryMatrixPlot[m2,grey]];*)
(*pm3=Show[frame,MyBinaryMatrixPlot[m3,grey]];*)
(*pm1BL=Show[frame,MyBinaryMatrixPlot[m1,Black]];*)
(*pm2BL=Show[frame,MyBinaryMatrixPlot[m2,Black]];*)
(*pm3BL=Show[frame,MyBinaryMatrixPlot[m3,Black]];*)
(*m1m2overlay=Show[pm1,pm2];*)
(*m1m3overlay=Show[pm1,pm3];*)
(**)
(*upm1=DoubleUp[m1];*)
(*upm2=DoubleUp[m2];*)
(*upm3=DoubleUp[m3];*)
(**)
(*pupm1C=Show[MyBinaryMatrixPlot[upm1,distinctRed],PlotRange->{{0,1},{0,1}}];*)
(*pupm2C=Show[MyBinaryMatrixPlot[upm2,distinctGreen],PlotRange->{{0,1},{0,1}}];*)
(*pupm3C=Show[MyBinaryMatrixPlot[upm3,distinctGreen],PlotRange->{{0,1},{0,1}}];*)
(*pupm1=Show[MyBinaryMatrixPlot[upm1,Black],PlotRange->{{0,1},{0,1}}];*)
(*pupm2=Show[MyBinaryMatrixPlot[upm2,Black],PlotRange->{{0,1},{0,1}}];*)
(*pupm3=Show[MyBinaryMatrixPlot[upm3,Black],PlotRange->{{0,1},{0,1}}];*)
(**)
(*m1m2UpOverlayC=Show[pupm1C,pupm2C];*)
(*m1m3UpOverlayC=Show[pupm1C,pupm3C];*)
(*m1m2UpOverlayBL=Show[pupm1,pupm2];*)
(*m1m3UpOverlayBL=Show[pupm1,pupm3];*)
(**)
(*m1Overlay=Show[pupm1,frame,MyBinaryMatrixPlot[m1,distinctTeal]];*)
(*m2Overlay=Show[pupm2,frame,MyBinaryMatrixPlot[m2,distinctTeal]];*)
(*m3Overlay=Show[pupm3,frame,MyBinaryMatrixPlot[m3,distinctTeal]];*)


(* ::Input:: *)
(*cross=Graphics[{Black,Thickness[0.1],Line[{{-1,0},{1,0}}],Line[{{0,-1},{0,1}}]}];*)
(*X=Graphics[{Black,Thickness[0.1],Line[{{-1,1},{1,-1}}],Line[{{-1,-1},{1,1}}]}];*)
(*diagonal=Graphics[{Black,Thickness[0.1],Line[{{-1,-1},{1,1}}]}];*)
(*horizontal=Graphics[{Black,Thickness[0.1],Line[{{-1,0},{1,0}}]}];*)
(*triangle=Graphics[{Black,Thickness[0.09],Line[{{-1,-1},{1,-1},{0,1},{-1,-1}}]}];*)
(*circle=Graphics[{Black,Thickness[0.08],Circle[{0,0},1]}];*)
(*smallcircle=Graphics[{Black,Thickness[0.08],Circle[{0,0},0.45]}];*)
(*square=Graphics[{Black,Thickness[0.1],Line[{{-1,-1},{-1,1},{1,1},{1,-1},{-1,-1}}]}];*)
(*badkey=diagonal;*)
(**)
(*cr=ShapesToMatrix[{cross}];*)
(*xx=ShapesToMatrix[{X}];*)
(*tr=ShapesToMatrix[{triangle}];*)
(*cl=ShapesToMatrix[{circle}];*)
(*sq=ShapesToMatrix[{square}];*)
(**)
(*ctcr=MyEncrypt[cr];*)
(*ctxx=MyEncrypt[xx];*)
(*cttr=MyEncrypt[tr];*)
(*ctcl=MyEncrypt[cl];*)
(*ctsq=MyEncrypt[sq];*)
(**)
(*cts={ctcr,ctxx,cttr,ctcl,ctsq};*)
(**)
(*{Mod[cr+1,2]//Image,Mod[xx+1,2]//Image,Mod[tr+1,2]//Image,Mod[cl+1,2]//Image,Mod[sq+1,2]//Image}*)


(* ::Input:: *)
(*ExportPDF[VectorBitmap[cr],"cross"];*)
(*ExportPDF[VectorBitmap[xx],"X"];*)
(*ExportPDF[VectorBitmap[tr],"triangle"];*)
(*ExportPDF[VectorBitmap[cl],"circle"];*)
(*ExportPDF[VectorBitmap[sq],"square"];*)
(**)
(*Do[*)
(*ExportPDF[VectorBitmapUp[c[[1]]],c[[2]]];*)
(*,{c,Transpose[{cts,{"ctcross","ctX","cttriangle","ctcircle","ctsquare"}}]}]*)


(* ::Input:: *)
(*SeedRandom[12]*)
(*localkey=RandomInteger[{0,1},{50,50}];*)
(*mes=ShapesToMatrix[{smallcircle,square}];*)
(*cyph=MyEncrypt[localkey,mes];*)
(**)
(*localkeyUp=DoubleUp[localkey];*)
(*mesUp=DoubleUp[mes];*)
(*cyphUp=DoubleUp[cyph];*)
(**)
(*localkeyPlot=Show[MyBinaryMatrixPlot[localkey,Black]];*)
(*mesPlot=Show[MyBinaryMatrixPlot[mes,Black]];*)
(*cyphPlot=Show[MyBinaryMatrixPlot[cyph,Black]];*)
(**)
(**)
(*localkeyUpPlot=Show[MyBinaryMatrixPlot[localkeyUp,Black]];*)
(*mesUpPlot=Show[MyBinaryMatrixPlot[mesUp,Black]];*)
(*cyphUpPlot=Show[MyBinaryMatrixPlot[cyphUp,Black]];*)
(**)
(*keyCyphOverlay=Show[localkeyUpPlot,cyphUpPlot];*)
(*keyMesOverlay=Show[localkeyUpPlot,mesUpPlot];*)
(**)
(*badKey=ShapesToMatrix[{diagonal}];*)
(*badCyph=MyEncrypt[badKey,mes];*)
(**)
(**)
(*badKeyUp=DoubleUp[badKey];*)
(*badCyphUp=DoubleUp[badCyph];*)
(**)
(*badKeyPlot=Show[frame,MyBinaryMatrixPlot[badKey,Black]];*)
(*badCyphPlot=Show[MyBinaryMatrixPlot[badCyph,Black]];*)
(**)
(*badKeyUpPlot=Show[MyBinaryMatrixPlot[badKeyUp,Black]];*)
(**)
(*badKeyMesOverlay=Show[badKeyUpPlot,mesUpPlot];*)
(**)
(*ExportPDF[pm1,"smallKeyGrey"];*)
(*ExportPDF[pm2,"smallPlaintextGrey"];*)
(*ExportPDF[pm3,"smallCyphertextGrey"];*)
(*ExportPDF[pm1BL,"smallKeyBlack"];*)
(*ExportPDF[pm2BL,"smallPlaintextBlack"];*)
(*ExportPDF[pm3BL,"smallCyphertextBlack"];*)
(*ExportPDF[m1m2overlay,"smallXOR_Key_Cypher_Grey"];*)
(*ExportPDF[m1m3overlay,"smallXOR_Key_Text_Grey"];*)
(**)
(*ExportPDF[pupm1C,"SmallUpKeyColored"];*)
(*ExportPDF[pupm2C,"SmallUpPlaintextColored"];*)
(*ExportPDF[pupm3C,"SmallUpCyphertextColored"];*)
(*ExportPDF[pupm1,"SmallUpKeyBlack"];*)
(*ExportPDF[pupm2,"SmallUpPlaintextBlack"];*)
(*ExportPDF[pupm3,"SmallUpCyphertextBlack"];*)
(*ExportPDF[m1m2UpOverlayC,"SmallUpXorPlaintextColored"];*)
(*ExportPDF[m1m3UpOverlayC,"SmallUpXorCyphertextColored"];*)
(*ExportPDF[m1m2UpOverlayBL,"SmallUpXorPlaintextBlack"];*)
(*ExportPDF[m1m3UpOverlayBL,"SmallUpXorCyphertextBlack"];*)
(*ExportPDF[m1Overlay,"SmallUpKeyOverlay"];*)
(*ExportPDF[m2Overlay,"SmallUpPlaintextOverlay"];*)
(*ExportPDF[m3Overlay,"SmallUpCyphertextOverlay"];*)
(**)
(**)
(*ExportPDF[localkeyPlot,"exampleKey"];*)
(*ExportPDF[mesPlot,"examplePlaintext"];*)
(*ExportPDF[cyphPlot,"exampleCyphertext"];*)
(*ExportPDF[localkeyUpPlot,"exampleKeyUp"];*)
(*ExportPDF[mesUpPlot,"examplePlaintextUp"];*)
(*ExportPDF[cyphUpPlot,"exampleCyphertextUp"];*)
(*ExportPDF[keyCyphOverlay,"exampleXorCyphertext"];*)
(*ExportPDF[keyMesOverlay,"exampleXorPlaintext"];*)
(**)
(**)
(*ExportPDF[badKeyPlot,"exampleBadKey"];*)
(*ExportPDF[badCyphPlot,"exampleBadCyphertext"];*)
(*ExportPDF[badKeyUpPlot,"exampleBadKeyUp"];*)
(*ExportPDF[badKeyMesOverlay,"exampleBadXorPlaintext"];*)


(* ::Input:: *)
(*validshapes={{cross},{X},{circle},{triangle},{square}};*)
(**)
(*othershapes={{diagonal,square},{smallcircle,circle},{smallcircle,square}};*)
(**)
(*SeedRandom[1]*)
(*rand=Table[RandomInteger[{0,1},{50,50}],{10}];*)
(**)
(*validmats=Map[ShapesToMatrix,validshapes];*)
(**)
(*othermats=Map[ShapesToMatrix,othershapes];*)
(**)
(*othermats=Join[othermats,rand];*)
(**)
(*Table[Mod[m+1,2]//Image,{m,validmats}]*)
(*Table[Mod[m+1,2]//Image,{m,othermats}]*)


(* ::Input:: *)
(*lst={};*)
(**)
(*validmatsCTS=Table[MyEncrypt[m,key],{m,validmats}];*)
(**)
(*Do[*)
(*Do[*)
(*AppendTo[lst,MyEncrypt[validmats[[j]],validmatsCTS[[i]]]]*)
(*,{j,1,i-1}]*)
(*,{i,1,Length[validmats]}]*)
(**)
(*figs=RandomSample[Join[*)
(*Table[VectorBitmapUp[m],{m,lst}],*)
(*Flatten[Table[VectorBitmapUp[MyEncrypt[m,k]],{m,othermats},{k,validmatsCTS}]],*)
(*{VectorBitmapUp[key]}*)
(*]];*)
(**)


(* ::Input:: *)
(*Do[*)
(*ExportPDF[figs[[i]],ToString[i]]*)
(*,{i,1,Length[figs]}]*)
